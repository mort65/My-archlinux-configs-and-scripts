#!/bin/sh
#
# Setup a work space called `work` with two windows
# first window has 3 panes. 
# The first pane set at 65%, split horizontally, set to api root and running vim
# pane 2 is split at 25% and running redis-server 
# pane 3 is set to api root and bash prompt.
# note: `api` aliased to `cd ~/path/to/work`
#
session="home"


if /usr/bin/tmux has-session -t $session 2>/dev/null; then  #checking if tmux has a running session
	if [ "$TERM" = "screen" ] && [ -n "$TMUX" ]; then #checking if script is running from a tmux session
		echo "You are already attached."
		exit 1
	else
			/usr/bin/tmux attach-session -t $session
			exit 0
	fi
fi
	
	

# set up tmux
/usr/bin/tmux start-server

# create a new tmux session, starting vim from a saved session in the new window
/usr/bin/tmux new-session -d -s $session

tmux new-window -t $SESSION:1
tmux send-keys "ranger" C-m

tmux select-window -t $SESSION:0

# Split pane 1 horizontal by 40%
/usr/bin/tmux splitw -v -p 40

# Select pane 2 
/usr/bin/tmux selectp -t 1
/usr/bin/tmux send-keys "/usr/bin/cmus" C-m 

# Split pane 2 vertiacally by 50%
#/usr/bin/tmux splitw -h -p 30

# Select pane 1
/usr/bin/tmux selectp -t 0

# Split pane 1 horizontal by 45%
/usr/bin/tmux splitw -v -p 45
/usr/bin/tmux send-keys "/usr/bin/nethogs" C-m 

# Select pane 1
/usr/bin/tmux selectp -t 0
/usr/bin/tmux send-keys "/usr/bin/clear" C-m 

# Finished setup, attach to the tmux session!
/usr/bin/tmux attach-session -t $session

exit 0
