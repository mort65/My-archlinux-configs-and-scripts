#!/bin/bash
#this script show total amount of available swap space

#Total used memory = MemTotal - MemFree
#Non cache/buffer memory = Total used memory - (Buffers + Cached memory)
#Buffers = Buffers
#Cached memory = Cached + SReclaimable - Shmem
#Swap = SwapTotal - SwapFree

shopt -s extglob

programname="totalfreeswap"
UNIT="M"
DIGIT=0

function help {
    echo "Usage: $programname [OPTION]"
    echo "A script for showing total free swap space"
    echo ""
    echo "Options: -h -[k|m|g] [0-9]"
    echo "  -h,    display help"
    echo "  -k     show output in kilobytes"
    echo "  -m     show output in megabytes"
    echo "  -g,    show output in gigabytes"
    echo "  [0-9] precision of the output"
}

function usage {
    help
    exit 1
}

#testing number of args:
if [ "${#}" -gt 2 ]; then
    echo "Invalid number of parameters"
    echo ""
    usage
    exit 1
fi

# Test whether command-line argument is present (non-empty).
if [ -n "$1" ]; then
  if [[ "$1" == "-h" ]]; then
    help
    exit 0
  elif [[ "$1" == "-m" ]]; then
	UNIT="M"
  elif [[ "$1" == "-k" ]]; then
	UNIT="K"
  elif [[ "$1" == "-g" ]]; then
	UNIT="G"
  else
	echo "Invalid argument '${1}'"
	echo ""
    usage
  fi
fi

if [ -n "$2" ]; then
  if [[ "$2" =~ ^[0-9]$ ]]; then
	DIGIT="${2#-}"
  else
	echo "Invalid argument '${2}'"
	echo ""
    usage
 fi
fi

resultK=$(awk '/^SwapFree:/ {print $2}' '/proc/meminfo')

if [ $UNIT == "K" ]; then
	printf "%.${DIGIT}fK\n" $resultK
elif [ $UNIT == "M" ]; then
	resultM=$(bc -l <<< $resultK/1024)
	printf "%.${DIGIT}fM\n" $resultM
elif [ $UNIT == "G" ]; then
	resultG=$(bc -l <<< $resultK/1024/1024)
	printf "%.${DIGIT}fG\n" $resultG
fi

exit 0
